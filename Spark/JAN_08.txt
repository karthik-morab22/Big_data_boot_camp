>>> from pyspark.sql.functions import *
>>> df3.show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'df3' is not defined
>>> empDf=spark.read.option("header",True).option("inferSchema",True).csv("/data/employees.csv")
>>> emDf.show(10)                                                               
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'emDf' is not defined
>>> empDf.show(10)
+-----------+----------+---------+--------+------------+---------+----------+------+--------------+----------+-------------+
|EMPLOYEE_ID|FIRST_NAME|LAST_NAME|   EMAIL|PHONE_NUMBER|HIRE_DATE|    JOB_ID|SALARY|COMMISSION_PCT|MANAGER_ID|DEPARTMENT_ID|
+-----------+----------+---------+--------+------------+---------+----------+------+--------------+----------+-------------+
|        198|    Donald| OConnell|DOCONNEL|650.507.9833|21-JUN-07|  SH_CLERK|  2600|            - |       124|           50|
|        199|   Douglas|    Grant|  DGRANT|650.507.9844|13-JAN-08|  SH_CLERK|  2600|            - |       124|           50|
|        200|  Jennifer|   Whalen| JWHALEN|515.123.4444|17-SEP-03|   AD_ASST|  4400|            - |       101|           10|
|        201|   Michael|Hartstein|MHARTSTE|515.123.5555|17-FEB-04|    MK_MAN| 13000|            - |       100|           20|
|        202|       Pat|      Fay|    PFAY|603.123.6666|17-AUG-05|    MK_REP|  6000|            - |       201|           20|
|        203|     Susan|   Mavris| SMAVRIS|515.123.7777|07-JUN-02|    HR_REP|  6500|            - |       101|           40|
|        204|   Hermann|     Baer|   HBAER|515.123.8888|07-JUN-02|    PR_REP| 10000|            - |       101|           70|
|        205|   Shelley|  Higgins|SHIGGINS|515.123.8080|07-JUN-02|    AC_MGR| 12008|            - |       101|          110|
|        206|   William|    Gietz|  WGIETZ|515.123.8181|07-JUN-02|AC_ACCOUNT|  8300|            - |       205|          110|
|        100|    Steven|     King|   SKING|515.123.4567|17-JUN-03|   AD_PRES| 24000|            - |        - |           90|
+-----------+----------+---------+--------+------------+---------+----------+------+--------------+----------+-------------+
only showing top 10 rows

>>> empDf.printSchema()
root
 |-- EMPLOYEE_ID: integer (nullable = true)
 |-- FIRST_NAME: string (nullable = true)
 |-- LAST_NAME: string (nullable = true)
 |-- EMAIL: string (nullable = true)
 |-- PHONE_NUMBER: string (nullable = true)
 |-- HIRE_DATE: string (nullable = true)
 |-- JOB_ID: string (nullable = true)
 |-- SALARY: integer (nullable = true)
 |-- COMMISSION_PCT: string (nullable = true)
 |-- MANAGER_ID: string (nullable = true)
 |-- DEPARTMENT_ID: integer (nullable = true)

>>> empDf.count()
50
>>> empDf.count("SALARY")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: count() takes 1 positional argument but 2 were given
>>> empDf.count("SALARY").show()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: count() takes 1 positional argument but 2 were given
>>> empDf.select(count("SALARY")).show()
+-------------+
|count(SALARY)|
+-------------+
|           50|
+-------------+

>>> empDf.select(count("SALARY").alias("MAX_SAL")).show()
+-------+
|MAX_SAL|
+-------+
|     50|
+-------+

>>> empDf.select(max("SALARY").alias("MAX_SAL")).show()
+-------+
|MAX_SAL|
+-------+
|  24000|
+-------+

>> empDf.select("EMPLOYEE_ID","FIRST_NAME","SALARY").orderBy("SALARY").show()
+-----------+----------+------+
|EMPLOYEE_ID|FIRST_NAME|SALARY|
+-----------+----------+------+
|        132|        TJ|  2100|
|        136|     Hazel|  2200|
|        128|    Steven|  2200|
|        127|     James|  2400|
|        135|        Ki|  2400|
|        131|     James|  2500|
|        119|     Karen|  2500|
|        140|    Joshua|  2500|
|        198|    Donald|  2600|
|        199|   Douglas|  2600|
|        118|       Guy|  2600|
|        126|     Irene|  2700|
|        139|      John|  2700|
|        130|     Mozhe|  2800|
|        117|     Sigal|  2800|
|        116|    Shelli|  2900|
|        134|   Michael|  2900|
|        115| Alexander|  3100|
|        125|     Julia|  3200|
|        138|   Stephen|  3200|
+-----------+----------+------+
only showing top 20 rows

>>> empDf.select("EMPLOYEE_ID","FIRST_NAME","DEPARTMENT_ID","SALARY").orderBy(col("DEPARTMENT_ID").asc(),col("SALARY").desc()).show(50)
+-----------+-----------+-------------+------+
|EMPLOYEE_ID| FIRST_NAME|DEPARTMENT_ID|SALARY|
+-----------+-----------+-------------+------+
|        200|   Jennifer|           10|  4400|
|        201|    Michael|           20| 13000|
|        202|        Pat|           20|  6000|
|        114|        Den|           30| 11000|
|        115|  Alexander|           30|  3100|
|        116|     Shelli|           30|  2900|
|        117|      Sigal|           30|  2800|
|        118|        Guy|           30|  2600|
|        119|      Karen|           30|  2500|
|        203|      Susan|           40|  6500|
|        121|       Adam|           50|  8200|
|        120|    Matthew|           50|  8000|
|        122|      Payam|           50|  7900|
|        123|     Shanta|           50|  6500|
|        124|      Kevin|           50|  5800|
|        137|     Renske|           50|  3600|
|        133|      Jason|           50|  3300|
|        129|      Laura|           50|  3300|
|        125|      Julia|           50|  3200|
|        138|    Stephen|           50|  3200|
|        134|    Michael|           50|  2900|
|        130|      Mozhe|           50|  2800|
|        126|      Irene|           50|  2700|
|        139|       John|           50|  2700|
|        198|     Donald|           50|  2600|
|        199|    Douglas|           50|  2600|
|        131|      James|           50|  2500|
|        140|     Joshua|           50|  2500|
|        135|         Ki|           50|  2400|
|        127|      James|           50|  2400|
|        128|     Steven|           50|  2200|
|        136|      Hazel|           50|  2200|
|        132|         TJ|           50|  2100|
|        103|  Alexander|           60|  9000|
|        104|      Bruce|           60|  6000|
|        105|      David|           60|  4800|
|        106|      Valli|           60|  4800|
|        107|      Diana|           60|  4200|
|        204|    Hermann|           70| 10000|
|        100|     Steven|           90| 24000|
|        102|        Lex|           90| 17000|
|        101|      Neena|           90| 17000|
|        108|      Nancy|          100| 12008|
|        109|     Daniel|          100|  9000|
|        110|       John|          100|  8200|
|        112|Jose Manuel|          100|  7800|
|        111|     Ismael|          100|  7700|
|        113|       Luis|          100|  6900|
|        205|    Shelley|          110| 12008|
|        206|    William|          110|  8300|
+-----------+-----------+-------------+------+

>>> empDf.groupBy("DEPARTMENT_ID").max("SALARY").show()
+-------------+-----------+
|DEPARTMENT_ID|max(SALARY)|
+-------------+-----------+
|           20|      13000|
|           40|       6500|
|          100|      12008|
|           10|       4400|
|           50|       8200|
|           70|      10000|
|           90|      24000|
|           60|       9000|
|          110|      12008|
|           30|      11000|
+-------------+-----------+

>>> empDf.groupBy("DEPARTMENT_ID").min("SALARY").show()
+-------------+-----------+
|DEPARTMENT_ID|min(SALARY)|
+-------------+-----------+
|           20|       6000|
|           40|       6500|
|          100|       6900|
|           10|       4400|
|           50|       2100|
|           70|      10000|
|           90|      17000|
|           60|       4200|
|          110|       8300|
|           30|       2500|
+-------------+-----------+

>>> empDf.groupBy("DEPARTMENT_ID").sum("SALARY").show()
+-------------+-----------+
|DEPARTMENT_ID|sum(SALARY)|
+-------------+-----------+
|           20|      19000|
|           40|       6500|
|          100|      51608|
|           10|       4400|
|           50|      85600|
|           70|      10000|
|           90|      58000|
|           60|      28800|
|          110|      20308|
|           30|      24900|
+-------------+-----------+

>>> empDf.groupBy("DEPARTMENT_ID","JOB_ID").sum("SALARY").show()
+-------------+----------+-----------+
|DEPARTMENT_ID|    JOB_ID|sum(SALARY)|
+-------------+----------+-----------+
|           90|   AD_PRES|      24000|
|           30|    PU_MAN|      11000|
|           70|    PR_REP|      10000|
|           50|    ST_MAN|      36400|
|           40|    HR_REP|       6500|
|           60|   IT_PROG|      28800|
|           10|   AD_ASST|       4400|
|           30|  PU_CLERK|      13900|
|           50|  ST_CLERK|      44000|
|           20|    MK_REP|       6000|
|           50|  SH_CLERK|       5200|
|           90|     AD_VP|      34000|
|          100|FI_ACCOUNT|      39600|
|          110|    AC_MGR|      12008|
|          110|AC_ACCOUNT|       8300|
|           20|    MK_MAN|      13000|
|          100|    FI_MGR|      12008|
+-------------+----------+-----------+

>>> empDf.groupBy("DEPARTMENT_ID","JOB_ID").agg(sum("SALARY").alias("SUM_SAL")).show()
+-------------+----------+-------+
|DEPARTMENT_ID|    JOB_ID|SUM_SAL|
+-------------+----------+-------+
|           90|   AD_PRES|  24000|
|           30|    PU_MAN|  11000|
|           70|    PR_REP|  10000|
|           50|    ST_MAN|  36400|
|           40|    HR_REP|   6500|
|           60|   IT_PROG|  28800|
|           10|   AD_ASST|   4400|
|           30|  PU_CLERK|  13900|
|           50|  ST_CLERK|  44000|
|           20|    MK_REP|   6000|
|           50|  SH_CLERK|   5200|
|           90|     AD_VP|  34000|
|          100|FI_ACCOUNT|  39600|
|          110|    AC_MGR|  12008|
|          110|AC_ACCOUNT|   8300|
|           20|    MK_MAN|  13000|
|          100|    FI_MGR|  12008|
+-------------+----------+-------+

>>> empDf.groupBy("DEPARTMENT_ID","JOB_ID").agg(sum("SALARY").alias("SUM_SAL"),max("SALARY").alias("MAX_SAL"),min("SALARY").alias("MIN_SAL")).show()
+-------------+----------+-------+-------+-------+
|DEPARTMENT_ID|    JOB_ID|SUM_SAL|MAX_SAL|MIN_SAL|
+-------------+----------+-------+-------+-------+
|           90|   AD_PRES|  24000|  24000|  24000|
|           30|    PU_MAN|  11000|  11000|  11000|
|           70|    PR_REP|  10000|  10000|  10000|
|           50|    ST_MAN|  36400|   8200|   5800|
|           40|    HR_REP|   6500|   6500|   6500|
|           60|   IT_PROG|  28800|   9000|   4200|
|           10|   AD_ASST|   4400|   4400|   4400|
|           30|  PU_CLERK|  13900|   3100|   2500|
|           50|  ST_CLERK|  44000|   3600|   2100|
|           20|    MK_REP|   6000|   6000|   6000|
|           50|  SH_CLERK|   5200|   2600|   2600|
|           90|     AD_VP|  34000|  17000|  17000|
|          100|FI_ACCOUNT|  39600|   9000|   6900|
|          110|    AC_MGR|  12008|  12008|  12008|
|          110|AC_ACCOUNT|   8300|   8300|   8300|
|           20|    MK_MAN|  13000|  13000|  13000|
|          100|    FI_MGR|  12008|  12008|  12008|
+-------------+----------+-------+-------+-------+

>>> 

>>> empDf.select(min("SALARY").alias("MIN_SAL")).show()
+-------+
|MIN_SAL|
+-------+
|   2100|
+-------+

>>> 
